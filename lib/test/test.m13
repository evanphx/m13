
def spec(name, body) {
  s = Spec.new(name)

  body(s)

  s.run
}

class Expectation {
  has @object

  def initialize(obj) {
    @object = obj
  }

  def equal|==(other) {
    if @object == object {
      1
    } else {
      $stdout.puts("FAIL: Expected "+ @object.^inspect + " to equal " + object.^inspect)
    }
  }
}

class Case {
  has @description is r
  has @body

  def initialize(description, body) {
    @description = description
    @body = body
  }

  def expect(object) {
    Expectation.new(object)
  }

  def run() {
    @body(self)
  }
}

class Spec {
  has @name
  has @cases

  def initialize(name) {
    @name = name
    @cases = []
  }

  def it(desc, body) {
    @cases << Case.new(desc, body)
  }

  def run() {
    $stdout.puts("  " + @name)
    @cases.each(c => {
      $stdout.puts("â€¢ " + c.description)
      c.run
    })
  }
}

